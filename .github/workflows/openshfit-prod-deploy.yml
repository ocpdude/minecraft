name: Minecraft Production Deploy
on:

  workflow_dispatch:

  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  build-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Extract Minecraft version
        id: minecraft_version
        run: echo "VERSION=$(ls minecraft* | awk -F"." 'OFS="." {print $2,$3,$4}')" >> $GITHUB_ENV
        shell: bash
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{env.REGISTRY}}/ocpdude/minecraft:${{ env.VERSION }}
            ${{env.REGISTRY}}/ocpdude/minecraft:latest
            shaker242/minecraft:${{ env.VERSION }}
            shaker242/minecraft:latest

  lint-k8s:
    uses: ocpdude/reusable/.github/workflows/lint-k8s.yaml@main
    with:
      file-path: ./manifests

  build_production:
    environment: minecraft-production
    name: "Deploying Minecraft"
    runs-on: [ ubuntu-latest ]
    needs: [ build-deployment, lint-k8s ]
    steps:
      - name: 'Establish Wireguard Connection'
        run: |
          sudo apt install wireguard resolvconf
          echo '${{ secrets.WG_PRIVATE_KEY }}' > privatekey
          echo '${{ secrets.WG_PRESHARED_KEY }}' > presharedkey
          sudo ip link add dev wg0 type wireguard
          sudo ip address add dev wg0 172.16.100.4/26
          sudo ip link set dev wg0 up
          sudo wg set wg0 listen-port 51820 private-key privatekey peer '${{ secrets.WG_PEER_PUBKEY }}' preshared-key presharedkey endpoint '${{ secrets.WG_ENDPOINT }}' persistent-keepalive 25 allowed-ips '${{ secrets.WG_ALLOWED_IPS }}'
          sudo route add -net 172.16.1.0/26 gw 172.16.100.1 wg0
          sudo resolvconf -u && echo "nameserver 172.16.1.1" | sudo tee /etc/resolvconf/resolv.conf.d/head && sudo resolvconf -u
      - name: Checkout code
        uses: actions/checkout@v4
      - name: "Install tools"
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "latest"
      - name: Authenticate and set namespace
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_username: ${{ secrets.OPENSHIFT_USER }}
          openshift_password: ${{ secrets.OCPADMIN_PASSWORD }}
          certificate_authority_data: ${{ secrets.REDCLOUD_CA }}
          namespace: minecraft
      - name: "Deploy Production"
        run: |
          oc -n minecraft apply -f ./manifests/minecraft-configmap.yaml
          oc -n minecraft apply -f ./manifests/minecraft-deployment.yaml
          oc -n minecraft apply -f ./manifests/minecraft-np.yaml
      - name: "Remove Staging"
        continue-on-error: true
        run: oc delete ns minecraft-okd-staging
      - name: "Remove Staging Environment"
        uses: strumwolf/delete-deployment-environment@v3
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          environment: minecraft-staging
          onlyDeactivateDeployments: true