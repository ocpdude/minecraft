name: Bedrock Build & Deploy  

on:
  push:
    branches:
    - main
    paths:
    - 'bedrock/Dockerfile'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:

  lint-docker:
    uses: ocpdude/reusable/.github/workflows/lint-docker.yaml@main
    with:
      file-path: Dockerfile

  security-checks:
    permissions:
      contents: read
      security-events: write
      actions: read
      issues: write
      pull-requests: write
      statuses: write
      packages: write
    runs-on: ubuntu-latest
    needs: [ lint-docker ]
    steps:
      - uses: actions/checkout@v4
      - name: Build the test image
        run: docker build . --tag localbuild/testimage:latest
      - name: Grype scan the test image
        uses: anchore/scan-action@v4
        id: scan
        with:
          image: localbuild/testimage:latest
          fail-build: false
          severity-cutoff: critical

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Extract Bedrock version
        id: bedrock_version
        run: echo VERSION=$(sed -n 's/^ARG BEDROCK_VERSION=\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/p' bedrock/Dockerfile) >> $GITHUB_ENV
        shell: bash
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{env.REGISTRY}}/ocpdude/bedrock:${{ env.VERSION }}
            ${{env.REGISTRY}}/ocpdude/bedrock:latest
            shaker242/bedrock:${{ env.VERSION }}
            shaker242/bedrock:latest

  deploy_production:
    environment: bedrock-production
    name: "Deploying Bedrock"
    runs-on: [ ubuntu-latest ]
    needs: [ security-checks ]
    steps:
      - name: 'Establish Wireguard Connection'
        run: |
          sudo apt install wireguard resolvconf
          echo '${{ secrets.WG_PRIVATE_KEY }}' > privatekey
          echo '${{ secrets.WG_PRESHARED_KEY }}' > presharedkey
          sudo ip link add dev wg0 type wireguard
          sudo ip address add dev wg0 172.16.100.4/26
          sudo ip link set dev wg0 up
          sudo wg set wg0 listen-port 51820 private-key privatekey peer '${{ secrets.WG_PEER_PUBKEY }}' preshared-key presharedkey endpoint '${{ secrets.WG_ENDPOINT }}' persistent-keepalive 25 allowed-ips '${{ secrets.WG_ALLOWED_IPS }}'
          sudo route add -net 172.16.1.0/26 gw 172.16.100.1 wg0
          sudo resolvconf -u && echo "nameserver 172.16.1.1" | sudo tee /etc/resolvconf/resolv.conf.d/head && sudo resolvconf -u
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Extract Bedrock version
        id: bedrock_version
        run: echo VERSION=$(sed -n 's/^ARG BEDROCK_VERSION=\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/p' bedrock/Dockerfile) >> $GITHUB_ENV
        shell: bash
      - name: "Install tools"
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "latest"
      - name: Authenticate and set namespace
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_username: ${{ secrets.OPENSHIFT_USER }}
          openshift_password: ${{ secrets.OCPADMIN_PASSWORD }}
          certificate_authority_data: ${{ secrets.REDCLOUD_CA }}
          namespace: minecraft-bedrock
      - name: "Deploy Production"
        run: oc set image deployment/minecraft-bedrock bedrock=ghcr.io/ocpdude/bedrock:${{ env.VERSION }}